const { eslint } = require('@umijs/fabric');
/**
 * module.exports = {
    stylelint: stylelint,
    prettier: prettier,
    strictEslint: strictEslint,
    eslint: softyEslint,
    default: softyEslint
};
 */
module.exports = {
  ...eslint,
  globals: {
    ANT_DESIGN_PRO_ONLY_DO_NOT_USE_IN_YOUR_PRODUCTION: true,
    page: true,
  },
  rules: {
    'no-console': 'off',
    'no-debugger': 'off',
    'no-shadow': 'off',
    'no-alert': 'off',
    'no-continue': 'off',
    'no-case-declarations': 'off',
    'no-prototype-builtins': 'off',
    'no-use-before-define': 'off',
    'no-mixed-operators': 'off',
    'no-nested-ternary': 'off',
    'no-unused-expressions': 'off',
    'no-useless-constructor': 'off',
    'no-underscore-dangle': 'off',
    'no-plusplus': 'off',
    'no-fallthrough': 'off',
    'no-restricted-syntax': 'off',
    'no-restricted-globals': 'off',
    'no-param-reassign': 'off',
    camelcase: 'off',
    experimentalDecorators: 'off',
    radix: 'off',
    'padded-blocks': 'off',
    'global-require': 'off',
    'class-methods-use-this': 'off',
    'linebreak-style': 'off',
    'max-len': 'off',
    'new-cap': 'off',
    'consistent-return': 'off',
    'func-names': 'off',
    'array-callback-return': 'off',
    'default-case': 'off',
    'guard-for-in': 'off',
    'prefer-destructuring': 'off',
    'prefer-promise-reject-errors': 'off',
    'space-infix-ops': 'off',
    'eslint-import-resolver-typescript': {
      extensions: ['.ts', '.tsx', '.d.ts'],
    },
    'import/no-mutable-exports': 'off',
    'import/prefer-default-export': 'off',
    'import/no-dynamic-require': 'off',
    'import/no-named-as-default-member': 'off',
    'import/no-named-as-default': 'off',
    'import/no-unresolved': 'off',
    'import/no-extraneous-dependencies': 'off',
    'import/no-cycle': 'off',
    'import/named': 'off',
    'import/newline-after-import': 'off',
    'import/extensions': 'off',
    '@typescript-eslint/no-unused-vars': 'off',
    '@typescript-eslint/no-var-requires': 'off',
    '@typescript-eslint/class-name-casing': 'off',
    '@typescript-eslint/explicit-function-return-type': 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    '@typescript-eslint/explicit-member-accessibility': 'off',
    '@typescript-eslint/adjacent-overload-signatures': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-empty-interface': 'off',
    'jsx-a11y/no-static-element-interactions': 'off',
    'jsx-a11y/anchor-is-valid': 'off',
    'jsx-a11y/click-events-have-key-events': 'off',
    'react/prop-types': 'off',
    'react/no-unused-state': 'off',
    'no-unresolved-import': 'off',
    'jsx-a11y/no-noninteractive-element-interactions': 'off',
    'semi': 'off',
    'arrow-parens': 'off'
  }
};
